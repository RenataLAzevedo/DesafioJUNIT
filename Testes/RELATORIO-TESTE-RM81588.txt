RM 81588	
Renata de Lima Azevedo
//código Junit
import static org.junit.jupiter.api.Assertions.*;

import org.junit.jupiter.api.Test;

import junit.framework.TestCase;

public class JulgamentoPrisioneiroTest extends TestCase {
	int PENA_INOCENCIA = 0;
  	int PENA_CONDENACAO_MUTUA = 5;
  	int PENA_CONDENACAO_INDIVIDUAL = 10;
  	int PENA_CONDENACAO_CUMPLICES = 1;
  
  	@Test
	public void testCondenacaoMutua() {
		JulgamentoPrisioneiro julgamento = new JulgamentoPrisioneiro();
		String prisioneiroA = "culpado";
		String prisioneiroB = "culpado";
		int condenacao = julgamento.calculaPena(prisioneiroA, prisioneiroB);
		assertEquals(condenacao, PENA_CONDENACAO_MUTUA);
	}
  	@Test
	public void testCondenacaoIndividual() {
		JulgamentoPrisioneiro julgamento = new JulgamentoPrisioneiro();
		String prisioneiroA = "culpado";
		String prisioneiroB = "inocente";
		int condenacao = julgamento.calculaPena(prisioneiroA, prisioneiroB);
		assertEquals(condenacao, PENA_CONDENACAO_INDIVIDUAL);
	}
  	@Test
	public void testCondenacaoCumplices() {
		JulgamentoPrisioneiro julgamento = new JulgamentoPrisioneiro();
		String prisioneiroA = "inocente";
		String prisioneiroB = "culpado";
		int condenacao = julgamento.calculaPena(prisioneiroA, prisioneiroB);
		assertEquals(condenacao, PENA_CONDENACAO_CUMPLICES);
	}
  	@Test
	public void testCondenacaoInocencia() {
		JulgamentoPrisioneiro julgamento = new JulgamentoPrisioneiro();
		String prisioneiroA = "inocente";
		String prisioneiroB = "inocente";
		int condenacao = julgamento.calculaPena(prisioneiroA, prisioneiroB);
		assertEquals(condenacao, PENA_INOCENCIA);
	}
}


//relatório
1º rodada - Unresolved compilation problem
	Alterar o tipo de parâmetro para "String"

2º rodada - junit.framework.AssertionFailedError: expected:<1> but was:<10>
	Alterar a variável PENA_CONDENACAO_CUMPLICES para 1

3º rodada - junit.framework.AssertionFailedError: expected:<1> but was:<10>
	Alterar PENA_INOCENCIA para 0